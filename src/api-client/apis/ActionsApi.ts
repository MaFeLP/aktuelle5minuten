/* tslint:disable */
/* eslint-disable */
/**
 * Aktuelle 5 Minuten
 * Aktuelle 5 Minuten API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

/**
 * 
 */
export class ActionsApi extends runtime.BaseAPI {

    /**
     * Clean the database entries that are older than a certain time
     * Cleans the database entries
     */
    async cleanRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/actions/clean`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Clean the database entries that are older than a certain time
     * Cleans the database entries
     */
    async clean(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.cleanRaw(initOverrides);
    }

    /**
     * Retrieves all articles from Deutschlandfunk\'s Wochenrückblick and stores them in the database.
     * Load articles
     */
    async loadRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/actions/load`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Retrieves all articles from Deutschlandfunk\'s Wochenrückblick and stores them in the database.
     * Load articles
     */
    async load(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.loadRaw(initOverrides);
    }

}
